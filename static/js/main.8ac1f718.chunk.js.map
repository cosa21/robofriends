{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAYeA,EAVJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MACjB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BL,EAA1B,cAClB,6BAAKC,IACL,4BAAIC,QCQDI,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAO,cAAC,EAAD,CAAcV,GAAIO,EAAOG,GAAGV,GAAIC,KAAMM,EAAOG,GAAGT,KAAMC,MAAOK,EAAOG,GAAGR,OAA5DQ,SCEvBC,EARG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCU,KAAK,SAASC,YAAY,mBAAmBC,SAAUH,OCKxGI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,YCwCJC,G,wDArCX,aAAc,IAAD,8BACT,gBAWJX,aAAe,SAACY,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAXxC,EAAKC,MAAM,CACPtB,OAAO,GACPmB,YAAY,IAJP,E,gEAQO,IAAD,OACfI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAAClB,OAAO2B,S,+BAMhH,IAAD,EACsBC,KAAKN,MAAzBtB,EADF,EACEA,OAAOmB,EADT,EACSA,YACRU,EAAe7B,EAAO8B,QAAO,SAAAC,GAC/B,OAAOA,EAAMrC,KAAKsC,cAAcC,SAASd,EAAYa,kBAEzD,OAAmB,IAAhBhC,EAAOkC,OACC,4CAGH,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcuB,KAAKvB,eAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUL,OAAQ6B,a,GA9BxBM,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAIP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.8ac1f718.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=({id,name,email})=>{\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 grow bw2 shadow-5 ma2'>\r\n            <img alt=\"XXX\" src={`https://robohash.org/${id}?200x200`} />\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type=\"search\" placeholder=\"enter robot name\" onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflowY:'scroll', border: '3px solid black', height:'700px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots:[],\r\n            searchField:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json()).then(users=>this.setState({robots:users}));\r\n    }\r\n\r\n    searchChange = (event)=>{\r\n        this.setState({searchField:event.target.value})\r\n    }\r\n    render() {\r\n        const {robots,searchField}=this.state;\r\n        const filteredRobots=robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n        if(robots.length===0){\r\n            return <h1>Loading...</h1>\r\n        }else{\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className='f1'>Robofriends</h1>\r\n                    <SearchBox searchChange={this.searchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}